// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders a Button 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "stretch",
      "backgroundColor": "#E0E0E0",
      "borderColor": null,
      "borderWidth": 0,
      "elevation": 2,
      "flexDirection": "row",
      "justifyContent": "center",
      "opacity": 1,
      "padding": 16,
      "shadowColor": "#212121",
      "shadowOffset": Object {
        "height": 1,
        "width": 0,
      },
      "shadowOpacity": 0.17,
      "shadowRadius": 2,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "left": 16,
          "position": "absolute",
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <Text
      accessible={true}
      allowFontScaling={false}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": undefined,
            "fontSize": 12,
          },
          Array [
            Object {
              "color": "#212121",
              "fontSize": 24,
            },
            undefined,
          ],
          Object {
            "fontFamily": "Material Icons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
        ]
      }
    >
      
    </Text>
  </View>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={
      Array [
        Object {
          "color": "#212121",
          "fontSize": 17,
        },
        undefined,
      ]
    }
  >
    Test
  </Text>
</View>
`;

exports[`renders a Button with a customIcon 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "stretch",
      "backgroundColor": "#E0E0E0",
      "flexDirection": "row",
      "justifyContent": "center",
      "opacity": 1,
      "padding": 16,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "left": 16,
          "position": "absolute",
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <Text
      accessible={true}
      allowFontScaling={false}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": undefined,
            "fontSize": 12,
          },
          undefined,
          Object {
            "fontFamily": "Material Icons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
        ]
      }
    >
      
    </Text>
  </View>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={
      Array [
        Object {
          "color": "#212121",
          "fontSize": 17,
        },
        undefined,
      ]
    }
  >
    Button
  </Text>
</View>
`;

exports[`renders a Button with a loader 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "stretch",
      "backgroundColor": "#E0E0E0",
      "flexDirection": "row",
      "justifyContent": "center",
      "opacity": 1,
      "padding": 16,
    }
  }
>
  <ActivityIndicator
    animating={true}
    color="red"
    hidesWhenStopped={true}
    size="small"
  />
</View>
`;

exports[`renders a Button with no props 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "stretch",
      "backgroundColor": "#E0E0E0",
      "flexDirection": "row",
      "justifyContent": "center",
      "opacity": 1,
      "padding": 16,
    }
  }
>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={
      Array [
        Object {
          "color": "#212121",
          "fontSize": 17,
        },
        undefined,
      ]
    }
  >
    Button
  </Text>
</View>
`;

exports[`renders a Button with text left and icon right 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "stretch",
      "backgroundColor": "#E0E0E0",
      "flexDirection": "row",
      "justifyContent": "flex-start",
      "opacity": 1,
      "padding": 16,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "left": 16,
          "position": "absolute",
        },
        false,
        Object {
          "left": "auto",
          "right": 16,
        },
        undefined,
      ]
    }
  >
    <Text
      accessible={true}
      allowFontScaling={false}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": undefined,
            "fontSize": 12,
          },
          Array [
            Object {
              "color": "#212121",
              "fontSize": 24,
            },
            undefined,
          ],
          Object {
            "fontFamily": "Material Icons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
        ]
      }
    >
      
    </Text>
  </View>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={
      Array [
        Object {
          "color": "#212121",
          "fontSize": 17,
        },
        undefined,
      ]
    }
  >
    Test
  </Text>
</View>
`;

exports[`renders a disabled Button 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "stretch",
      "backgroundColor": "#E0E0E0",
      "flexDirection": "row",
      "justifyContent": "center",
      "opacity": 1,
      "padding": 16,
    }
  }
>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={
      Array [
        Object {
          "color": "#212121",
          "fontSize": 17,
        },
        undefined,
      ]
    }
  >
    Button
  </Text>
</View>
`;
